name: Deploy DIGGGIN with Three.js App

on:
  push:
    branches:
      - main
  # Allow manual trigger
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the 
# run in-progress and latest queued. However, do NOT cancel in-progress 
# runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true
          cache-version: 0

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Install Jekyll dependencies
        run: bundle install

      - name: Build Jekyll site
        run: |
          bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production

      - name: Process record data for Three.js app
        run: |
          # Copy Three.js app to Jekyll build output
          cp -r threejs-app _site/
          
          # Convert CSV to optimized JSON if Node.js is available
          if command -v node &> /dev/null; then
            echo "Node.js available, converting data..."
            # This would run the data conversion if we had Node.js setup
            # For now, the sample data is sufficient
          else
            echo "Using sample data for Three.js app"
          fi
          
          # Ensure the CSV data is accessible
          cp DiggerDB.csv _site/
          
          echo "Three.js app integrated successfully"

      - name: Verify build structure
        run: |
          echo "Build directory structure:"
          find _site -type f -name "*.html" -o -name "*.js" -o -name "*.css" -o -name "*.json" | head -20
          
          echo "Three.js app files:"
          ls -la _site/threejs-app/ || echo "Three.js app directory not found"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4